#+TITLE: Loop Invariants
#+date: <2020-6-1 03:39>
#+description: loop invariants
#+filetags: blog research invariants

A loop invariant is a property =I= that always holds at the loop entrance. For
a given loop

#+begin_src python
  while (c):
      ... # loop body
#+end_src

we can rewrite it as

#+begin_src python
  while True:
      # l:   anything property that holds here is a loop invariant
      if not(c): break
      ... # loop body
#+end_src

and the loop invariant is a property =I= that always hold at the given
location =l=.


# *** Examples
#     :PROPERTIES:
#     :CUSTOM_ID: examples
#     :END:
# ** Inductive loop invariants
#    :PROPERTIES:
#    :CUSTOM_ID: inductive-loop-invariants
#    :END:
# An *inductive* loop invariant is simply a loop invariant that can be
# proved using *induction*. To inductively prove that a property =I= is a
# loop invariant, we prove 2 cases:
# 1. initial: =I= when we first hit the loop entrance (i.e., first time we reach location =l=)
# 1. induction: assume that =I= holds (and the loop guard is true), the successful
# execution of the loop body preserves =I= (i.e., =I= holds at the end of
# the loop body.
